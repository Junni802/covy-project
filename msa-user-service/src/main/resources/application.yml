spring:
  application:
    name: user-service

  management:
    tracing:
      sampling:
        probability: 1.0
      propagation:
        consume: b3
        produce: b3_multi
    zipkin:
      tracing:
        endpoint: "http://127.0.0.1:9411/api/v2/spans"

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    stream:
      username: guest
      password: guest

#  datasource:
#    url: jdbc:h2:mem:test
#    driver-class-name: org.h2.Driver
#    username: sa

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create
      # 참고로 create-drop: 애플리케이션 종료할 때, 테이블 모두 drop. 애플리케이션 종료 후, 데이터 확인 불가능.
    properties:
      hibernate:
        # show_sql: true
        format_sql: true

server:
  port: 0

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    server-url:
      defaultZone: http://127.0.0.1:8761/eureka


greeting:
  message: Welcome to the Simple E-commerce

logging:
  level:
    org.apache.kafka: WARN


jwt:
  header: Authorization
  secret: a2FyaW10b2thcmltdG9rYXJpbXRva2FyaW10b2thcmltdG9rYXJpbXRva2FyaW10b2thcmltdG9==
  token_expiration_time: 86400000 # ttl (초)

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus
